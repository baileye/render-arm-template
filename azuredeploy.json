{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "North Europe",
      "allowedValues": [
        "Australia East",
        "Australia Southeast",
        "Brazil South",
        "Central US",
        "East Asia",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "This is the region where the resources will be created"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "RenderVnet",
      "metadata": {
        "description": "This is your Virtual Network"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The CIDR address space for your Virtual Network in Azure"
      }
    },
    "vpnSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "This is CIDR prefix for the VPN Subnet"
      }
    },
    "renderSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "This is CIDR prefix for the Render Node Subnet"
      }
    },
    "vpnNSGName": {
      "type": "string",
      "defaultValue": "vpn_NSG",
      "metadata": {
        "description": "This is name of the networkSecurityGroup that will be assigned to VPN Subnet"
      }
    },
    "renderNSGName": {
      "type": "string",
      "defaultValue": "render_NSG",
      "metadata": {
        "description": "This is name of the networkSecurityGroup that will be assigned to Render Subnet"
      }
    },
    "inboundSshPort": {
      "type": "int",
      "defaultValue": 1194,
      "metadata": {
        "description": "Inbound port for SSH connections to the VPN VM"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "dnsname23221",
      "metadata": {
        "description": "DNS Name for the Public IP. Must be lowercase."
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "defaultValue": "storageaccount232345",
      "metadata": {
        "description": "Storage account name for the VMs."
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "user66",
      "metadata": {
        "description": "UserName for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "password1",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "vpnVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14"
      ],
      "metadata": {
        "description": "Size for the VPN VM"
      }
    },
    "renderVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14"
      ],
      "metadata": {
        "description": "Size for the Render Node VMs"
      }
    },
    "numberOfRenderNodes": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Render Node VMs to deploy"
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "publicIpVpn",
    "publicIPAddressType": "Dynamic",
    "vpnNicName": "vpnNicName",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "vpnSubnetName": "vpnSubnet",
    "renderSubnetName": "renderSubnet",
    "vpnSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('vpnSubnetName'))]",
    "renderSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('renderSubnetName'))]",
    "vpnVmName": "vpnvm",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "14.04.2-LTS"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('vpnNSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "[parameters('inboundSshPort')]",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('renderNSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Vpn_Ssh",
            "properties": {
              "description": "Allow Vpn SSH Access Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('vpnSubnetPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_Internet_Outbound",
            "properties": {
              "description": "Block Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 200,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('vpnNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('renderNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vpnSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vpnSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vpnNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('renderSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('renderSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('renderNSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vpnNicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigvpn",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('vpnSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vpnVmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vpnNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vpnVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vpnVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/osdiskvpn.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vpnNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
             "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('renderNodeNic', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfRenderNodes')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('renderSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('renderVm', copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfRenderNodes')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'renderNodeNic', copyIndex())]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('renderVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('renderVm', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdiskrender', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('renderNodeNic', copyindex()))]"
            }
          ]
        }
      }
    }
  ]
}
